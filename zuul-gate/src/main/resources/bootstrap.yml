spring:
    application:
        name: zuul-gate
    thymeleaf:
        mode: LEGACYHTML5
        cache: false

    cloud:
        oadbalancer:
          retry:
            enabled: true #该参数用来开启重试机制，它默认是关闭的
        config:
          uri: http://localhost:8762
          fail-fast: true
          #指定连接config服务的用户名和密码，因为config项目是受security保护的
          password: root
          username: user

server:
    port: 8765 #启动端口


gate:
  ignore:
    startWith: /static
    contain: .

#由于feign内置了hystrix功能，所以这里加一个配置即可，不加这个的话hystrix不启用
feign:
  hystrix:
    enabled: true

#rpc调用controller的超时时间有好几个因素控制
#首先分两大块，第一块是ribbon，第二块是hystrix，即发送请求的超时时间和熔断的超时时间
#现在controller里面模拟一个5s的查询数据库，首先hystrix的timeout.enable要设置为false，如果是true，则设置的别的时间不生效
#然后就是hystrix的timeoutInMilliseconds，ribbon的ConnectTimeout，ReadTimeout三个时间，以时间值最小的那个为准，别的设置时间再大也没有用
#设置hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD    #execution.isolation.strategy= THREAD|SEMAPHORE,两种线程隔离机制
        timeout:
          enabled: false
      isolation:
        thread:
          timeoutInMilliseconds: 10000 #断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。

#设置ribbon的超时时间
#根据如下配置，当访问到故障请求的时候，它会再尝试访问一次当前实例（次数由MaxAutoRetries配置），
#如果不行，就换一个实例进行访问，
#如果还是不行，再换一次实例访问（更换次数由MaxAutoRetriesNextServer配置），如果依然不行，返回失败信息。
ribbon:
  ConnectTimeout: 5000   #请求连接的超时时间
  ReadTimeout: 5000      #请求处理的超时时间
  OkToRetryOnAllOperations: true    #对所有操作请求都进行重试
  MaxAutoRetriesNextServer: 3       #切换实例的重试次数
  MaxAutoRetries: 1       #对当前实例的重试次数
  eager-load:             #饿加载模式
    enabled: true
  eureka:
      enabled: true #配置zuul路由时用将此属性设置为false,网上说设置false，但是设置false彻底不走了，被迫改成true，后来查说设置false是用在ribbon而不使用eureka的环境下才设置false，这里使用eureka，则不能设置false